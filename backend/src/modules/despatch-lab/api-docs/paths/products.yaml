products:
  get:
    summary: Get products
    description: Retrieve warehouse products with optional pagination and stock information
    operationId: getProducts
    tags:
      - Products
    parameters:
      - $ref: '../components/parameters/index.yaml#/PageNumber'
      - $ref: '../components/parameters/index.yaml#/PageSize'
      - name: returnStockTotalQuantity
        in: query
        description: Include stock total quantity in response
        required: false
        schema:
          type: boolean
          default: false
        example: true
    responses:
      '200':
        description: Products retrieved successfully
        content:
          application/json:
            schema:
              type: object
              properties:
                data:
                  type: array
                  items:
                    type: object
                    # TODO: Define product schema based on actual API response
                meta:
                  $ref: '../components/schemas/index.yaml#/PaginationMeta'
      '401':
        $ref: '../components/responses/index.yaml#/Unauthorized'
      '500':
        $ref: '../components/responses/index.yaml#/InternalServerError'

productById:
  get:
    summary: Get product by ID
    description: Retrieve a specific product by its unique identifier
    operationId: getProductById
    tags:
      - Products
    parameters:
      - $ref: '../components/parameters/index.yaml#/ProductId'
    responses:
      '200':
        description: Product retrieved successfully
        content:
          application/json:
            schema:
              type: object
              # TODO: Define product schema based on actual API response
      '401':
        $ref: '../components/responses/index.yaml#/Unauthorized'
      '404':
        $ref: '../components/responses/index.yaml#/NotFound'
      '500':
        $ref: '../components/responses/index.yaml#/InternalServerError'